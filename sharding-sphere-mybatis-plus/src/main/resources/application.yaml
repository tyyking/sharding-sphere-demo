# mybatis配置
mybatis-plus:
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.szss.shardingjdbc.demo.domain
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    #refresh-mapper: true
    #数据库大写下划线转换
    capital-mode: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull
    jdbc-type-for-null: 'null'

mybatis:
  config-location: classpath:mybatis-config.xml

sharding:
  jdbc:
    datasource:
      names: ds0,ds1,ds2
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds0
        username: root
        password: root
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds1
        username: root
        password: root
      ds2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds2
        username: root
        password: root
    config:
      sharding:
        default-database-strategy:
          inline:
            sharding-column: user_id
            algorithm-expression: ds$->{user_id % 3}
        tables:
          t_config:
            actual-data-nodes: ds0.t_config
          t_user:
            actual-data-nodes: ds$->{0..2}.t_user_$->{0..2}
            table-strategy:
              inline:
                sharding-column: user_id
                algorithm-expression: t_user_$->{user_id % 3}
            key-generator-column-name: user_id
          t_order:
            actual-data-nodes: ds$->{0..2}.t_order_$->{0..2}
            table-strategy:
              inline:
                sharding-column: order_id
                algorithm-expression: t_order_$->{order_id % 3}
            key-generator-column-name: order_id
          t_order_item:
            actual-data-nodes: ds$->{0..2}.t_order_item$->{0..2}
            table-strategy:
              inline:
                sharding-column: order_id
                algorithm-expression: t_order_item_$->{order_id % 3}
            key-generator-column-name: order_item_id
        defaultKeyGeneratorClassName: io.shardingsphere.core.keygen.DefaultKeyGenerator
        props:
          sql:
            show: true

# 日志
logging:
  level:
    root: INFO
    com.szss: DEBUG
    java.sql: DEBUG
    org.mybatis: DEBUG
    io.shardingsphere: DEBUG
